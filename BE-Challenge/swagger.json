{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "API for user authentication, authorization, and management"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token refreshed successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in a user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Log out a user",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "summary": "Verify a user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verificationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "verificationToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/forgot": {
      "post": {
        "summary": "Forgot password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/create-vietqr": {
      "post": {
        "summary": "Create a VietQR payment QR code",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "The amount to be paid",
                    "example": "100000"
                  }
                },
                "required": [
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated VietQR payment URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "qrUrl": {
                      "type": "string",
                      "description": "The URL for the VietQR payment QR code",
                      "example": "https://img.vietqr.io/image/123456-78901234-ABC.png?amount=100000&addInfo=Ma%20giao%20dich%20123456789&accountName=Bank%20Account"
                    },
                    "transactionId": {
                      "type": "string",
                      "description": "The unique transaction ID",
                      "example": "123456789"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/check-transaction-status/{transactionId}": {
      "get": {
        "summary": "Check the status of a VietQR payment transaction",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique transaction ID",
              "example": "123456789"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction status successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction",
                      "example": "success"
                    },
                    "transaction": {
                      "type": "object",
                      "description": "Details of the transaction",
                      "properties": {
                        "transactionId": {
                          "type": "string",
                          "description": "The transaction ID",
                          "example": "123456789"
                        },
                        "amount": {
                          "type": "string",
                          "description": "The amount of the transaction",
                          "example": "100000"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the transaction",
                          "example": "Payment for Ma giao dich 123456789"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the transaction",
                          "example": "completed"
                        }
                      }
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Error checking transaction status"
          }
        }
      }
    },
    "/category": {
      "get": {
        "summary": "Retrieve a list of categories",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The category ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The category name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "summary": "Update user by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/password/{id}": {
      "patch": {
        "summary": "Update user password",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/updateAccountType/{id}": {
      "put": {
        "summary": "Update user account type",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update account type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account type updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "summary": "Create a new post",
        "tags": [
          "Posts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "content",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/posts/{userId}": {
      "get": {
        "summary": "Get all posts by a user",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to fetch posts for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts by the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "title": {
                        "type": "string",
                        "example": "Post title"
                      },
                      "content": {
                        "type": "string",
                        "example": "Post content"
                      },
                      "userId": {
                        "type": "string",
                        "example": "user123"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Posts not found"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "summary": "Get all reports",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "A list of all reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "challengeID": {
                        "type": "string",
                        "example": "challenge123"
                      },
                      "reportContent": {
                        "type": "string",
                        "example": "Report content"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-07-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{challengeID}": {
      "post": {
        "summary": "Create a new report for a challenge",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "challengeID",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to report",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reportContent": {
                    "type": "string"
                  }
                },
                "required": [
                  "reportContent"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "summary": "Get a report by ID",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123"
                    },
                    "challengeID": {
                      "type": "string",
                      "example": "challenge123"
                    },
                    "reportContent": {
                      "type": "string",
                      "example": "Report content"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-07-19T12:34:56Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a report by ID",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the report to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report deleted successfully"
          },
          "404": {
            "description": "Report not found"
          }
        }
      }
    },
    "/challenge": {
      "get": {
        "summary": "Get all challenges",
        "tags": [
          "Challenge"
        ],
        "responses": {
          "200": {
            "description": "A list of challenges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "title": {
                        "type": "string",
                        "example": "Challenge 1"
                      },
                      "description": {
                        "type": "string",
                        "example": "Description of challenge 1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new challenge",
        "tags": [
          "Challenge"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Challenge created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/challenge/share": {
      "post": {
        "summary": "Share a challenge",
        "tags": [
          "Challenge"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "challengeId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "challengeId",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Challenge shared successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/challenge/{id}": {
      "get": {
        "summary": "Get challenge by ID",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single challenge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123"
                    },
                    "title": {
                      "type": "string",
                      "example": "Challenge 1"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description of challenge 1"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Challenge not found"
          }
        }
      },
      "put": {
        "summary": "Update challenge by ID",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Challenge updated successfully"
          },
          "404": {
            "description": "Challenge not found"
          }
        }
      },
      "delete": {
        "summary": "Delete challenge by ID",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Challenge deleted successfully"
          },
          "404": {
            "description": "Challenge not found"
          }
        }
      }
    },
    "/challenge/{id}/verify": {
      "put": {
        "summary": "Verify a challenge",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to verify",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Challenge verified successfully"
          },
          "404": {
            "description": "Challenge not found"
          }
        }
      }
    },
    "/challenge/ban/{id}": {
      "put": {
        "summary": "Ban a challenge",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to ban",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Challenge banned successfully"
          },
          "404": {
            "description": "Challenge not found"
          }
        }
      }
    },
    "/challengeUser/user/{id}": {
      "get": {
        "summary": "Get all challenges for a user",
        "tags": [
          "ChallengeUser"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to fetch challenges for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user challenges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "userID": {
                        "type": "string",
                        "example": "user123"
                      },
                      "challengeID": {
                        "type": "string",
                        "example": "challenge123"
                      },
                      "status": {
                        "type": "string",
                        "example": "completed"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/challengeUser": {
      "post": {
        "summary": "Create a new user challenge",
        "tags": [
          "ChallengeUser"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string"
                  },
                  "challengeID": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "userID",
                  "challengeID",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User challenge created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/challengeUser/{userID}/{challengeID}": {
      "get": {
        "summary": "Get a user challenge by user ID and challenge ID",
        "tags": [
          "ChallengeUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "challengeID",
            "in": "path",
            "required": true,
            "description": "ID of the challenge",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user challenge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123"
                    },
                    "userID": {
                      "type": "string",
                      "example": "user123"
                    },
                    "challengeID": {
                      "type": "string",
                      "example": "challenge123"
                    },
                    "status": {
                      "type": "string",
                      "example": "completed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User challenge not found"
          }
        }
      },
      "put": {
        "summary": "Update a user challenge",
        "tags": [
          "ChallengeUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "challengeID",
            "in": "path",
            "required": true,
            "description": "ID of the challenge",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "contentImg": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User challenge updated successfully"
          },
          "404": {
            "description": "User challenge not found"
          }
        }
      }
    },
    "/challengeUser/{userID}": {
      "get": {
        "summary": "Get all challenges for a user",
        "tags": [
          "ChallengeUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user challenges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123"
                      },
                      "userID": {
                        "type": "string",
                        "example": "user123"
                      },
                      "challengeID": {
                        "type": "string",
                        "example": "challenge123"
                      },
                      "status": {
                        "type": "string",
                        "example": "completed"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}